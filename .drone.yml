kind: pipeline
type: docker
name: test

trigger:
  event:
    - push

workspace:
  path: /app

services:
  - name: postgres
    image: postgres:14.3-alpine3.16
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr", "-c", "max_connections=1000"]
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      PGDATA: /data
      POSTGRES_HOST_AUTH_METHOD: "md5"

steps:
  - name: Run tests
    image: rust:1.59.0-buster
    volumes:
      - name: shared
        path: /app/target
    environment:
      RUST_LOG: trading_view=info,rocket=debug,guilder=debug,sqlx=error,sea_orm::driver::sqlx_postgres=error,info
      RUST_BACKTRACE: full
    commands:
      - echo "MASTER_DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres" > .env.test
      - echo "SECRET_KEY=MASFLaLCvdFePDVL2QmMTn0dQh9UByC2hqfTmyIYcEI=" >> .env.test
      - echo "ENCRYPTION_KEY=bdadd4ef579ebe5a1ff92e2785686b2c=" >> .env.test
      - echo "SELENIUM_HUB_URL=http://localhost:4444" >> .env.test
      - cargo test --workspace

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: shared
    host:
      path: /tmp/guilder

---
kind: pipeline
type: docker
name: deploy
trigger:
  event:
    - push
workspace:
  path: "/guilder" # http://plugins.drone.io/drone-plugins/drone-docker/
steps:
  - name: Build Images
    image: plugins/docker
    settings:
      repo: macbury/guilder
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
