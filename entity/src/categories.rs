//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;
use serde::{Serialize, Deserialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "categories")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    has_many = "super::assets::Entity",
    from = "Column::Id",
    to = "super::assets::Column::CategoryId",
    on_update = "NoAction",
    on_delete = "SetNull"
  )]
  Assets,
}

impl Related<super::assets::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Assets.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
